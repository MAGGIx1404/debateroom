# Usage
# Start: docker compose -f docker-compose.dev.yml up -d
# Stop: docker compose -f docker-compose.dev.yml down
# Destroy: docker compose -f docker-compose.dev.yml down -v --remove-orphans
# Remove volumes: docker volume rm [...volume names]

name: debate-room

x-minio-common: &minio-common
  image: minio/minio:RELEASE.2025-04-22T22-12-26Z
  command: server /export --console-address ":9001"
  restart: unless-stopped
  ports:
    - "9000:9000"
    - "9001:9001"
  volumes:
    - uploads:/export

services:
  # An ephermerally stored postgres database for testing
  postgres_test: &postgres_test
    image: postgres:16.3-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5451:5432"
    # Healthcheck ensures db is queryable when `docker-compose up --wait` completes
    healthcheck:
      test: "pg_isready -U pg"
      interval: 500ms
      timeout: 10s
      retries: 20

  # A persistently-stored postgres database
  postgres:
    <<: *postgres_test
    container_name: debate_room_db
    restart: unless-stopped
    ports:
      - "5450:5432"
    healthcheck:
      disable: true
    volumes:
      - debate_room_db:/var/lib/postgresql/data

  # An ephermerally-stored redis cache for testing
  redis_test: &redis_test
    image: redis:7.0-alpine
    ports:
      - "6381:6379"
    healthcheck:
      test: ["CMD-SHELL", '[ "$$(redis-cli ping)" = "PONG" ]']
      interval: 500ms
      timeout: 10s
      retries: 20

  # A persistently-stored redis cache
  redis:
    <<: *redis_test
    container_name: debate_room_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    healthcheck:
      disable: true
    volumes:
      - debate_room_redis:/data

  mailhog:
    image: mailhog/mailhog
    container_name: debate_room_mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    healthcheck:
      test: ["CMD-SHELL", '[ "$$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8025)" = "200" ]']
      interval: 500ms
      timeout: 10s
      retries: 20

  minio:
    <<: *minio-common
    container_name: debate_room_minio


volumes:
  debate_room_db:
  debate_room_redis:
  uploads:
